import logging

# Setup logging configuration
logging.basicConfig(filename='error_log.txt', level=logging.ERROR,
                    format='%(asctime)s %(levelname)s:%(message)s')

def get_number(prompt):
    """Prompt user for a number and validate input."""
    while True:
        try:
            value = float(input(prompt))
            return value
        except ValueError as e:
            print("Invalid input! Please enter a valid number.")
            logging.error(f"ValueError occurred: {e}")

def addition(a, b):
    return a + b

def subtraction(a, b):
    return a - b

def multiplication(a, b):
    return a * b

def division(a, b):
    try:
        return a / b
    except ZeroDivisionError as e:
        print("Oops! Division by zero is not allowed.")
        logging.error(f"ZeroDivisionError occurred: {e}")
        return None

def calculator():
    print("Welcome to the Error-Free Calculator!")
    while True:
        print("\nChoose an operation:")
        print("1. Addition")
        print("2. Subtraction")
        print("3. Multiplication")
        print("4. Division")
        print("5. Exit")
        
        choice = input("> ").strip()

        if choice == '5':
            print("Goodbye!")
            break

        if choice not in ['1', '2', '3', '4']:
            print("Invalid choice. Please select a valid option.")
            continue

        num1 = get_number("Enter the first number: ")
        num2 = get_number("Enter the second number: ")

        try:
            if choice == '1':
                result = addition(num1, num2)
            elif choice == '2':
                result = subtraction(num1, num2)
            elif choice == '3':
                result = multiplication(num1, num2)
            elif choice == '4':
                result = division(num1, num2)
                if result is None:
                    continue  # Skip printing if division failed

        except Exception as e:
            print("An unexpected error occurred.")
            logging.error(f"Unexpected error: {e}")
            continue
        else:
            print(f"The result is: {result}")
        finally:
            # This block always runs, could be used for cleanup or logging
            pass

if __name__ == "__main__":
    calculator()

# Task 1 - Understanding Python Exceptions

while True:
    try:
        num = input("Enter a number: ")
        number = float(num)  # Convert input to float (handles integers and decimals)
        result = 100 / number
    except ZeroDivisionError:
        print("Oops! You cannot divide by zero.")
    except ValueError:
        print("Invalid input! Please enter a valid number.")
    else:
        print(f"100 divided by {number} is {result}.")
        break  # Exit the loop when successful

print("\n" + "-"*50 + "\n")

# Task 2 - Types of Exceptions

# IndexError example
try:
    lst = [1, 2, 3]
    print(lst[5])  # Invalid index, will raise IndexError
except IndexError:
    print("IndexError occurred! List index out of range.")

# KeyError example
try:
    dct = {"a": 1, "b": 2}
    print(dct["c"])  # Key 'c' does not exist
except KeyError:
    print("KeyError occurred! Key not found in the dictionary.")

# TypeError example
try:
    result = "hello" + 5  # Cannot add string and integer
except TypeError:
    print("TypeError occurred! Unsupported operand types.")

print("\n" + "-"*50 + "\n")

# Task 3 - Using try...except...else...finally

try:
    x = float(input("Enter the first number: "))
    y = float(input("Enter the second number: "))
    division = x / y
except ZeroDivisionError:
    print("Error: Cannot divide by zero!")
except ValueError:
    print("Error: Please enter valid numeric values!")
else:
    print(f"The result is {division}.")
finally:
    print("This block always executes.")
